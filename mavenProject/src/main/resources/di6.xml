<?xml version="1.0" encoding="UTF-8"?>
<beans xmlns="http://www.springframework.org/schema/beans"
	xmlns:xsi="http://www.w3.org/2001/XMLSchema-instance"
	xmlns:context="http://www.springframework.org/schema/context"
	xsi:schemaLocation="http://www.springframework.org/schema/beans http://www.springframework.org/schema/beans/spring-beans.xsd
		http://www.springframework.org/schema/context http://www.springframework.org/schema/context/spring-context-4.3.xsd">
	
	<!-- 
	Spring 이용해서 JDBC 프로그램
	1. 라이브러리 준비(OracleDB, Spring-jdbc) : maven이 관리 ▶ pom.xml 설정
	2. 설정파일 생성 : bean이 DB정보 설정
	3. DAO에서 아래와 같이 작성
		@Autowired // Type이 같으면 자동으로 Injection
		DataSource ds;
	4. ds로 DB 연결
	5. @Repository : @Component + DAO 과 같은 의미
	-->
	
	<!-- Namespaces에서 context 체크해야 접두사 사용 가능 -->
	<!-- <context:component-scan>
		 ▶ @Component, @Repository, @Service 등 Annotation 읽으라는 의미
		   원래 @Autowired는 별도로 작성했는데 같이 읽으라는 의미가 생김
		   @Autowired는 <context:annotation-config> 로 작성했었음
	-->
	<context:component-scan base-package="com.shinhan.mavenProject.section6"></context:component-scan>
	
	<bean id="dataSource" class="org.springframework.jdbc.datasource.DriverManagerDataSource">
		<property name="driverClassName" value="oracle.jdbc.driver.OracleDriver" />
		<property name="url" value="jdbc:oracle:thin:@localhost:1521:xe" />
		<property name="username" value="hr" />
		<property name="password" value="hr" />
	</bean>

</beans>
